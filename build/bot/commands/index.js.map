{"version":3,"sources":["../../../src/bot/commands/index.js"],"names":["event","webhookEvent","incomeMessage","message","text","toLowerCase","trim","formattedMessage","toString","split","sender","id","templates","introIDOS","utcObject","introTravel","utc","utcObj","googleTranslator","googleIntro","googleMore","templato","help","commands"],"mappings":";;;;;;;;yEAUO,iBAAyBA,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,gDADD,GACgBD,KADhB;AAGCE,iDAHD,GAGiBD,aAAaE,OAAb,CAAqBC,IAArB,CAA0BC,WAA1B,GAAwCC,IAAxC,EAHjB;AAICC,oDAJD,GAIoBL,cAAcM,QAAd,GAAyBC,KAAzB,CAA+B,GAA/B,CAJpB;AAAA,kDAMKF,iBAAiB,CAAjB,CANL;AAAA,oEAOM,MAPN,uBAWM,SAXN,uBAYM,MAZN,uBAaM,KAbN,uBAkBM,SAlBN,wBAmBM,SAnBN,wBAwBM,WAxBN,wBAyBM,WAzBN,wBAgCM,MAhCN,wBAqCM,YArCN,wBA0CM,QA1CN,wBA2CM,QA3CN,wBA+CM,KA/CN,wBAgDM,KAhDN,wBAoDM,SApDN,wBAyDM,KAzDN,wBA8DM,IA9DN,wBAkEM,WAlEN,wBAmEM,WAnEN,wBAuEM,OAvEN,wBAwEM,OAxEN,wBA4EM,SA5EN,wBA6EM,SA7EN,wBAiFM,QAjFN,wBAkFM,OAlFN,wBAsFM,OAtFN,wBAuFM,MAvFN,wBA2FM,SA3FN,wBA4FM,YA5FN,wBA6FM,QA7FN,wBAkGM,IAlGN,wBAsGM,UAtGN,wBAuGM,UAvGN;AAAA;;AAAA;AAQC,mEAAgBN,aAAaS,MAAb,CAAoBC,EAApC,EAAwC,SAAxC;AARD;;AAAA;AAAA;AAAA,2CAcO,oCAAqBV,aAAaS,MAAb,CAAoBC,EAAzC,EAA6C,iCAA7C,CAdP;;AAAA;AAAA;AAAA,2CAeO,8BAAeV,aAAaS,MAAb,CAAoBC,EAAnC,EAAuCC,qBAAU,YAAV,CAAvC,CAfP;;AAAA;AAAA;;AAAA;AAAA;AAAA,2CAoBO,oCAAqBX,aAAaS,MAAb,CAAoBC,EAAzC,EAA6CE,kBAA7C,CApBP;;AAAA;AAAA;AAAA,2CAqBO,8BAAeZ,aAAaS,MAAb,CAAoBC,EAAnC,EAAuCC,qBAAU,iBAAV,CAAvC,CArBP;;AAAA;AAAA;;AAAA;AA0BOE,6CA1BP,GA0BmB,qCA1BnB;AA2BOC,+CA3BP,GA2BqB,8BA3BrB;AAAA;AAAA,2CA4BO,0BAAed,aAAaS,MAAb,CAAoBC,EAAnC,EAAuCI,WAAvC,EAAoDD,UAAUE,GAA9D,CA5BP;;AAAA;AAAA;AAAA,2CA6BO,8BAAef,aAAaS,MAAb,CAAoBC,EAAnC,EAAuCC,qBAAU,UAAV,CAAvC,CA7BP;;AAAA;AAAA;;AAAA;AAiCOK,0CAjCP,GAiCgB,qCAjChB;;AAkCC,8DAAehB,aAAaS,MAAb,CAAoBC,EAAnC,EAAuCT,aAAvC,EAAsDe,OAAOD,GAA7D;AAlCD;;AAAA;AAAA;AAAA,2CAsCO,oCAAqBf,aAAaS,MAAb,CAAoBC,EAAzC,EAA6CO,yBAA7C,CAtCP;;AAAA;AAAA;AAAA,2CAuCO,8BAAejB,aAAaS,MAAb,CAAoBC,EAAnC,EAAuCC,qBAAU,sBAAV,CAAvC,CAvCP;;AAAA;AAAA;;AAAA;AAAA;AAAA,2CA4CO,kCAAqBX,aAAaS,MAAb,CAAoBC,EAAzC,EAA6CT,aAA7C,EAA4DK,iBAAiB,CAAjB,CAA5D,CA5CP;;AAAA;AAAA;;AAAA;AAAA;AAAA,2CAiDO,8BAAeN,aAAaS,MAAb,CAAoBC,EAAnC,EAAuCC,qBAAU,YAAV,CAAvC,CAjDP;;AAAA;AAAA;;AAAA;AAAA;AAAA,2CAqDO,oCAAqBX,aAAaS,MAAb,CAAoBC,EAAzC,EAA6CQ,oBAA7C,CArDP;;AAAA;AAAA;AAAA,2CAsDO,8BAAelB,aAAaS,MAAb,CAAoBC,EAAnC,EAAuCC,qBAAU,sBAAV,CAAvC,CAtDP;;AAAA;AAAA;;AAAA;AAAA;AAAA,2CA0DO,oCAAqBX,aAAaS,MAAb,CAAoBC,EAAzC,EAA6CS,mBAA7C,CA1DP;;AAAA;AAAA;AAAA,2CA2DO,kCAAqBnB,aAAaS,MAAb,CAAoBC,EAAzC,EAA6C,yBAA7C,EAAwE,QAAxE,CA3DP;;AAAA;AAAA;;AAAA;AA+DC,mEAAgBV,aAAaS,MAAb,CAAoBC,EAApC,EAAwC,MAAxC;AA/DD;;AAAA;AAoEC,kEAAeV,aAAaS,MAAb,CAAoBC,EAAnC,EAAuCC,qBAAU,cAAV,CAAvC;AApED;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,2CA8FwB,6BAAgBX,aAAaS,MAAb,CAAoBC,EAApC,CA9FxB;;AAAA;AA8FOU,4CA9FP;AAAA;AAAA,2CA+FO,8BAAepB,aAAaS,MAAb,CAAoBC,EAAnC,EAAuCU,QAAvC,CA/FP;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,2CAwGO,oCAAqBpB,aAAaS,MAAb,CAAoBC,EAAzC,EAA6CW,aAA7C,CAxGP;;AAAA;AAAA;;AAAA;AAAA;AAAA,2CA4GO,+BAAgBrB,aAAaS,MAAb,CAAoBC,EAApC,EAAwC,oCAAxC,CA5GP;;AAAA;AAAA;AAAA,2CA6GO,8BAAeV,aAAaS,MAAb,CAAoBC,EAAnC,EAAuCC,qBAAU,iBAAV,CAAvC,CA7GP;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;sBAAeW,Q;;;;;AAVtB;;AACA;;AACA;;AAEA;;AACA;;AAEA;;AACA","file":"index.js","sourcesContent":["import { sendTextMessage, sendMultipleMessages, sendGenMessage } from '../lib/messages'\nimport { getTimeAndDateNow } from '../lib/dateAndTime'\nimport { sendIdosAnswer } from '../idos'\n\nimport { introIDOS, help, googleTranslator, googleIntro, googleMore , getMoonbotPayload } from '../lib/answers'\nimport { templates } from '../lib/templates'\n\nimport { sendHackerIntro } from '../hacker'\nimport { sendTranslatedText, sendTraslatedMessage } from '../google'\n\nexport async function commands (event) {\n    let webhookEvent = event\n\n    let incomeMessage = webhookEvent.message.text.toLowerCase().trim()\n    let formattedMessage = incomeMessage.toString().split(\" \")\n\n    switch (formattedMessage[0]) {\n        case 'ahoj':\n        sendTextMessage(webhookEvent.sender.id, 'Kravina')\n        break\n  \n        case 'moonbot':\n        case 'moon':\n        case 'bot':\n        await sendMultipleMessages(webhookEvent.sender.id, getMoonbotPayload())\n        await sendGenMessage(webhookEvent.sender.id, templates['send_intro'])\n        break\n  \n        case 'spojeni':\n        case 'spojení':\n        await sendMultipleMessages(webhookEvent.sender.id, introIDOS)\n        await sendGenMessage(webhookEvent.sender.id, templates['send_idos_intro'])\n        break\n\n        case 'vyzkoušet':\n        case 'vyzkouset':\n        const utcObject = getTimeAndDateNow()\n        const introTravel = 'spoj volha do hlavni nadrazi'\n        await sendIdosAnswer(webhookEvent.sender.id, introTravel, utcObject.utc)\n        await sendGenMessage(webhookEvent.sender.id, templates['send_gif'])\n        break\n\n        case 'spoj':\n        const utcObj = getTimeAndDateNow()    \n        sendIdosAnswer(webhookEvent.sender.id, incomeMessage, utcObj.utc)\n        break\n\n        case 'translator': \n        await sendMultipleMessages(webhookEvent.sender.id, googleTranslator)\n        await sendGenMessage(webhookEvent.sender.id, templates['send_next_translator'])\n        break\n  \n        case 'preloz':\n        case 'přelož':\n        await sendTraslatedMessage(webhookEvent.sender.id, incomeMessage, formattedMessage[0])\n        break\n\n        case 'vse':\n        case 'vše':\n        await sendGenMessage(webhookEvent.sender.id, templates['get_school'])\n        break\n\n        case 'zjistit':\n        await sendMultipleMessages(webhookEvent.sender.id, googleIntro)\n        await sendGenMessage(webhookEvent.sender.id, templates['send_last_translator'])\n        break\n\n        case 'ano':\n        await sendMultipleMessages(webhookEvent.sender.id, googleMore)\n        await sendTraslatedMessage(webhookEvent.sender.id, 'Přelož Ahoj jak se máš?', 'Přelož')\n        break\n\n        case 'ne':\n        sendTextMessage(webhookEvent.sender.id, 'Haha')\n        break\n\n        case 'nastavení':\n        case 'nastaveni':\n        sendGenMessage(webhookEvent.sender.id, templates['get_language'])\n        break\n  \n        case 'prvak':\n        case 'prvák':\n        //sendGenMessage(webhookEvent.sender.id, templates['send_manual'])\n        break\n  \n        case 'fakulty':\n        case 'fakulta':\n        //sendGenMessage(webhookEvent.sender.id, templates['get_faculties'])\n        break\n  \n        case 'koleje':\n        case 'kolej':\n        //sendGenMessage(webhookEvent.sender.id, templates['get_dormitories'])\n        break\n  \n        case 'insis':\n        case 'isis':\n        //sendGenMessage(webhookEvent.sender.id, templates['get_isis'])\n        break\n  \n        case 'novinky':\n        case 'hackernews':\n        case 'hacker':\n        const templato = await sendHackerIntro(webhookEvent.sender.id)\n        await sendGenMessage(webhookEvent.sender.id, templato)\n        break\n  \n        case 'jb':\n        //sendGenMessage(webhookEvent.sender.id, templates['get_jb'])\n        break\n\n        case 'napoveda':\n        case 'nápověda':\n        await sendMultipleMessages(webhookEvent.sender.id, help)\n        break\n\n        default:\n        await sendTextMessage(webhookEvent.sender.id, 'Tenhle příkaz neznám... promiň :-(')\n        await sendGenMessage(webhookEvent.sender.id, templates['send_quick_help'])\n        break\n    }\n}"]}