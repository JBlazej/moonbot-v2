{"version":3,"sources":["../../../src/bot/commands/index.js"],"names":["event","webhookEvent","incomeMessage","message","text","toLowerCase","trim","formattedMessage","toString","split","sender","id","introIDOS","templates","utcObject","introTravel","utc","utcObj","googleTranslator","googleMore","help","commands"],"mappings":"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","file":"index.js","sourcesContent":["import { sendTextMessage, sendMultipleMessages, sendGenMessage } from '../lib/messages'\nimport { getTimeAndDateNow } from '../lib/dateAndTime'\nimport { sendIdosAnswer } from '../idos'\n\nimport { introIDOS, help, googleTranslator, googleMore } from '../lib/answers'\nimport { templates } from '../lib/templates'\n\nimport { sendTraslatedMessage } from '../google'\n\nexport async function commands (event) {\n    let webhookEvent = event\n\n    let incomeMessage = webhookEvent.message.text.toLowerCase().trim()\n    let formattedMessage = incomeMessage.toString().split(\" \")\n\n    switch (formattedMessage[0]) {\n        case 'ahoj':\n        sendTextMessage(webhookEvent.sender.id, 'Kravina')\n        break\n  \n        case 'spojeni':\n        case 'spojení':\n        await sendMultipleMessages(webhookEvent.sender.id, introIDOS)\n        await sendGenMessage(webhookEvent.sender.id, templates['send_idos_intro'])\n        break\n\n        case 'vyzkoušet':\n        case 'vyzkouset':\n        const utcObject = getTimeAndDateNow()\n        const introTravel = 'spoj volha do hlavni nadrazi'\n        await sendIdosAnswer(webhookEvent.sender.id, introTravel, utcObject.utc)\n        break\n\n        case 'spoj':\n        const utcObj = getTimeAndDateNow()    \n        sendIdosAnswer(webhookEvent.sender.id, incomeMessage, utcObj.utc)\n        break\n\n        case 'translator': \n        await sendMultipleMessages(webhookEvent.sender.id, googleTranslator)\n        await sendGenMessage(webhookEvent.sender.id, templates['send_next_translator'])\n        break\n  \n        case 'preloz':\n        case 'přelož':\n        await sendTraslatedMessage(webhookEvent.sender.id, incomeMessage, formattedMessage[0])\n        break\n\n        case 'vse':\n        case 'vše':\n        await sendGenMessage(webhookEvent.sender.id, templates['get_school'])\n        break\n\n        case 'ukaz':\n        case 'ukaž':\n        await sendMultipleMessages(webhookEvent.sender.id, googleMore)\n        await sendTraslatedMessage(webhookEvent.sender.id, 'Přelož Ahoj jak se máš?', 'Přelož')\n        break\n\n        case 'jazyk':\n        sendGenMessage(webhookEvent.sender.id, templates['get_language'])\n        break\n  \n        case 'prvak':\n        case 'prvák':\n        //sendGenMessage(webhookEvent.sender.id, templates['send_manual'])\n        break\n  \n        case 'fakulty':\n        case 'fakulta':\n        //sendGenMessage(webhookEvent.sender.id, templates['get_faculties'])\n        break\n  \n        case 'koleje':\n        case 'kolej':\n        //sendGenMessage(webhookEvent.sender.id, templates['get_dormitories'])\n        break\n  \n        case 'insis':\n        case 'isis':\n        //sendGenMessage(webhookEvent.sender.id, templates['get_isis'])\n        break\n  \n        case 'jb':\n        //sendGenMessage(webhookEvent.sender.id, templates['get_jb'])\n        break\n\n        case 'napoveda':\n        case 'nápověda':\n        await sendMultipleMessages(webhookEvent.sender.id, help)\n        break\n\n        default:\n        await sendTextMessage(webhookEvent.sender.id, 'Tenhle příkaz neznám.')\n        await sendGenMessage(webhookEvent.sender.id, templates['send_intro'])\n        break\n    }\n}"]}