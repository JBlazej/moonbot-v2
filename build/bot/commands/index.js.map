{"version":3,"sources":["../../../src/bot/commands/index.js"],"names":["event","webhookEvent","incomeMessage","message","text","toLowerCase","trim","formattedMessage","toString","split","sender","id","info","templates","introIDOS","introTravel","utcObject","utc","console","log","help","commands"],"mappings":";;;;;;;;yEASO,iBAAwBA,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,gDADD,GACgBD,KADhB;AAGCE,iDAHD,GAGiBD,aAAaE,OAAb,CAAqBC,IAArB,CAA0BC,WAA1B,GAAwCC,IAAxC,EAHjB;AAICC,oDAJD,GAIoBL,cAAcM,QAAd,GAAyBC,KAAzB,CAA+B,GAA/B,CAJpB;AAAA,kDAOIF,iBAAiB,CAAjB,CAPJ;AAAA,oEAQM,MARN,uBAYM,SAZN,uBAaM,MAbN,uBAcM,KAdN,uBAmBM,SAnBN,wBAoBM,SApBN,wBAyBM,WAzBN,wBA0BM,WA1BN,wBAgCM,MAhCN,wBAqCM,KArCN,wBAsCM,KAtCN,wBA0CM,OA1CN,wBA2CM,OA3CN,wBA+CM,SA/CN,wBAgDM,SAhDN,wBAoDM,QApDN,wBAqDM,OArDN,wBAyDM,OAzDN,wBA0DM,MA1DN,wBA8DM,YA9DN,wBAkEM,IAlEN,wBAsEM,UAtEN,wBAuEM,UAvEN;AAAA;;AAAA;AASC,mEAAgBN,aAAaS,MAAb,CAAoBC,EAApC,EAAwC,SAAxC;AATD;;AAAA;AAAA;AAAA,2CAeO,oCAAqBV,aAAaS,MAAb,CAAoBC,EAAzC,EAA6CC,aAA7C,CAfP;;AAAA;AAAA;AAAA,2CAgBO,8BAAeX,aAAaS,MAAb,CAAoBC,EAAnC,EAAuCE,qBAAU,YAAV,CAAvC,CAhBP;;AAAA;AAAA;;AAAA;AAAA;AAAA,2CAqBO,oCAAqBZ,aAAaS,MAAb,CAAoBC,EAAzC,EAA6CG,kBAA7C,CArBP;;AAAA;AAAA;AAAA,2CAsBO,8BAAeb,aAAaS,MAAb,CAAoBC,EAAnC,EAAuCE,qBAAU,iBAAV,CAAvC,CAtBP;;AAAA;AAAA;;AAAA;AA2BOE,+CA3BP,GA2BqB,8BA3BrB;AAAA;AAAA,2CA4BO,0BAAed,aAAaS,MAAb,CAAoBC,EAAnC,EAAuCI,WAAvC,EAAoDC,UAAUC,GAA9D,CA5BP;;AAAA;AAAA;AAAA,2CA6BO,8BAAehB,aAAaS,MAAb,CAAoBC,EAAnC,EAAuCE,qBAAU,UAAV,CAAvC,CA7BP;;AAAA;AAAA;;AAAA;AAiCCK,4CAAQC,GAAR,CAAYH,UAAUC,GAAtB;AACA,8DAAehB,aAAaS,MAAb,CAAoBC,EAAnC,EAAuCT,aAAvC,EAAsDc,UAAUC,GAAhE;AAlCD;;AAAA;AAAA;AAAA,2CAuCO,8BAAehB,aAAaS,MAAb,CAAoBC,EAAnC,EAAuCE,qBAAU,YAAV,CAAvC,CAvCP;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AA+DC,kEAAeZ,aAAaS,MAAb,CAAoBC,EAAnC,EAAuCE,qBAAU,gBAAV,CAAvC;AA/DD;;AAAA;AAAA;;AAAA;AAAA;AAAA,2CAwEO,oCAAqBZ,aAAaS,MAAb,CAAoBC,EAAzC,EAA6CS,aAA7C,CAxEP;;AAAA;AAAA;;AAAA;AAAA;AAAA,2CA4EO,+BAAgBnB,aAAaS,MAAb,CAAoBC,EAApC,EAAwC,oCAAxC,CA5EP;;AAAA;AAAA;AAAA,2CA6EO,8BAAeV,aAAaS,MAAb,CAAoBC,EAAnC,EAAuCE,qBAAU,iBAAV,CAAvC,CA7EP;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;sBAAeQ,Q;;;;;AATtB;;AACA;;AACA;;AAEA;;AACA;;;;AAEA,IAAIL,YAAY,qCAAhB","file":"index.js","sourcesContent":["import {sendTextMessage, sendMultipleMessages, sendGenMessage} from '../lib/messages'\nimport {getTimeAndDateNow} from '../lib/dateAndTime'\nimport {sendIdosAnswer} from '../idos'\n\nimport {info, introIDOS, help} from '../lib/answers'\nimport {templates} from '../lib/templates'\n\nlet utcObject = getTimeAndDateNow()\n\nexport async function commands(event){\n    let webhookEvent = event\n\n    let incomeMessage = webhookEvent.message.text.toLowerCase().trim()\n    let formattedMessage = incomeMessage.toString().split(\" \")\n\n\n    switch(formattedMessage[0]) {\n        case 'ahoj':\n        sendTextMessage(webhookEvent.sender.id, 'Kravina')\n        break\n  \n        case 'moonbot':\n        case 'moon':\n        case 'bot':\n        await sendMultipleMessages(webhookEvent.sender.id, info)\n        await sendGenMessage(webhookEvent.sender.id, templates['send_intro'])\n        break\n  \n        case 'spojeni':\n        case 'spojení':\n        await sendMultipleMessages(webhookEvent.sender.id, introIDOS)\n        await sendGenMessage(webhookEvent.sender.id, templates['send_idos_intro'])\n        break\n\n        case 'vyzkoušet':\n        case 'vyzkouset':\n        const introTravel = 'spoj volha do hlavni nadrazi'\n        await sendIdosAnswer(webhookEvent.sender.id, introTravel, utcObject.utc)\n        await sendGenMessage(webhookEvent.sender.id, templates['send_gif'])\n        break\n\n        case 'spoj':\n        console.log(utcObject.utc)\n        sendIdosAnswer(webhookEvent.sender.id, incomeMessage, utcObject.utc)\n        break\n  \n        case 'vse':\n        case 'vše':\n        await sendGenMessage(webhookEvent.sender.id, templates['get_school'])\n        break\n  \n        case 'prvak':\n        case 'prvák':\n        //sendGenMessage(webhookEvent.sender.id, templates['send_manual'])\n        break\n  \n        case 'fakulty':\n        case 'fakulta':\n        //sendGenMessage(webhookEvent.sender.id, templates['get_faculties'])\n        break\n  \n        case 'koleje':\n        case 'kolej':\n        //sendGenMessage(webhookEvent.sender.id, templates['get_dormitories'])\n        break\n  \n        case 'insis':\n        case 'isis':\n        //sendGenMessage(webhookEvent.sender.id, templates['get_isis'])\n        break\n  \n        case 'hackernews':\n        sendGenMessage(webhookEvent.sender.id, templates['get_hackernews'])\n        break\n  \n        case 'jb':\n        //sendGenMessage(webhookEvent.sender.id, templates['get_jb'])\n        break\n\n        case 'napoveda':\n        case 'nápověda':\n        await sendMultipleMessages(webhookEvent.sender.id, help)\n        break\n\n        default:\n        await sendTextMessage(webhookEvent.sender.id, 'Tenhle příkaz neznám... promiň :-(')\n        await sendGenMessage(webhookEvent.sender.id, templates['send_quick_help'])\n        break\n    }\n}"]}