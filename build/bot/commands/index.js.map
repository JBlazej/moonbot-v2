{"version":3,"sources":["../../../src/bot/commands/index.js"],"names":["event","webhookEvent","incomeMessage","message","text","toLowerCase","trim","formattedMessage","toString","split","sender","id","intro","introIDOS","templates","introTravel","utcNow","help","commands","Date"],"mappings":";;;;;;;;yEAWO,iBAAwBA,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,gDADD,GACgBD,KADhB;AAGCE,iDAHD,GAGiBD,aAAaE,OAAb,CAAqBC,IAArB,CAA0BC,WAA1B,GAAwCC,IAAxC,EAHjB;AAICC,oDAJD,GAIoBL,cAAcM,QAAd,GAAyBC,KAAzB,CAA+B,GAA/B,CAJpB;AAAA,kDAOIF,iBAAiB,CAAjB,CAPJ;AAAA,oEAQM,MARN,uBAYM,MAZN,uBAgBM,SAhBN,wBAiBM,SAjBN,wBAsBM,WAtBN,wBAuBM,WAvBN,wBA6BM,MA7BN,wBAiCM,KAjCN,wBAkCM,KAlCN,wBAsCM,OAtCN,wBAuCM,OAvCN,wBA2CM,SA3CN,wBA4CM,SA5CN,wBAgDM,QAhDN,wBAiDM,OAjDN,wBAqDM,OArDN,wBAsDM,MAtDN,wBA0DM,YA1DN,wBA8DM,IA9DN,wBAkEM,UAlEN,wBAmEM,UAnEN;AAAA;;AAAA;AASC,mEAAgBN,aAAaS,MAAb,CAAoBC,EAApC,EAAwC,SAAxC;AATD;;AAAA;AAaC,wEAAqBV,aAAaS,MAAb,CAAoBC,EAAzC,EAA6CC,gBAA7C;AAbD;;AAAA;AAAA;AAAA,2CAkBO,oCAAqBX,aAAaS,MAAb,CAAoBC,EAAzC,EAA6CE,oBAA7C,CAlBP;;AAAA;AAAA;AAAA,2CAmBO,8BAAeZ,aAAaS,MAAb,CAAoBC,EAAnC,EAAuCG,qBAAU,iBAAV,CAAvC,CAnBP;;AAAA;AAAA;;AAAA;AAwBOC,+CAxBP,GAwBqB,8BAxBrB;AAAA;AAAA,2CAyBO,0BAAed,aAAaS,MAAb,CAAoBC,EAAnC,EAAuCI,WAAvC,EAAoDC,MAApD,CAzBP;;AAAA;AAAA;AAAA,2CA0BO,8BAAef,aAAaS,MAAb,CAAoBC,EAAnC,EAAuCG,qBAAU,UAAV,CAAvC,CA1BP;;AAAA;AAAA;;AAAA;AA8BC,8DAAeb,aAAaS,MAAb,CAAoBC,EAAnC,EAAuCT,aAAvC,EAAsDc,MAAtD;AA9BD;;AAAA;AAAA;AAAA,2CAmCO,8BAAef,aAAaS,MAAb,CAAoBC,EAAnC,EAAuCG,qBAAU,YAAV,CAAvC,CAnCP;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,2CAoEO,oCAAqBb,aAAaS,MAAb,CAAoBC,EAAzC,EAA6CM,eAA7C,CApEP;;AAAA;AAAA;;AAAA;AAAA;AAAA,2CAwEO,+BAAgBhB,aAAaS,MAAb,CAAoBC,EAApC,EAAwC,oCAAxC,CAxEP;;AAAA;AAAA;AAAA,2CAyEO,8BAAeV,aAAaS,MAAb,CAAoBC,EAAnC,EAAuCG,qBAAU,iBAAV,CAAvC,CAzEP;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;sBAAeI,Q;;;;;AAXtB;;AAEA;;AAEA;;AACA;;AAEA;;;;AAEA,IAAIF,SAAS,IAAIG,IAAJ,EAAb","file":"index.js","sourcesContent":["import {sendTextMessage, sendMultipleMessages, sendGenMessage} from '../lib/messages'\n\nimport {sendIdosAnswer} from '../idos'\n\nimport {intro, introIDOS, help} from '../../views/messages'\nimport {templates} from '../../views/templates'\n\nimport {createNewUser} from '../../models/v1/user'\n\nlet utcNow = new Date()\n\nexport async function commands(event){\n    let webhookEvent = event\n\n    let incomeMessage = webhookEvent.message.text.toLowerCase().trim()\n    let formattedMessage = incomeMessage.toString().split(\" \")\n\n\n    switch(formattedMessage[0]) {\n        case 'ahoj':\n        sendTextMessage(webhookEvent.sender.id, 'Kravina')\n        break\n  \n        case 'moon':\n        sendMultipleMessages(webhookEvent.sender.id, intro)\n        break\n  \n        case 'spojeni':\n        case 'spojení':\n        await sendMultipleMessages(webhookEvent.sender.id, introIDOS)\n        await sendGenMessage(webhookEvent.sender.id, templates['send_idos_intro'])\n        break\n\n        case 'vyzkoušet':\n        case 'vyzkouset':\n        const introTravel = 'spoj volha do hlavni nadrazi'\n        await sendIdosAnswer(webhookEvent.sender.id, introTravel, utcNow)\n        await sendGenMessage(webhookEvent.sender.id, templates['send_gif'])\n        break\n\n        case 'spoj':\n        sendIdosAnswer(webhookEvent.sender.id, incomeMessage, utcNow)\n        break\n  \n        case 'vse':\n        case 'vše':\n        await sendGenMessage(webhookEvent.sender.id, templates['get_school'])\n        break\n  \n        case 'prvak':\n        case 'prvák':\n        //sendGenMessage(webhookEvent.sender.id, templates['send_manual'])\n        break\n  \n        case 'fakulty':\n        case 'fakulta':\n        //sendGenMessage(webhookEvent.sender.id, templates['get_faculties'])\n        break\n  \n        case 'koleje':\n        case 'kolej':\n        //sendGenMessage(webhookEvent.sender.id, templates['get_dormitories'])\n        break\n  \n        case 'insis':\n        case 'isis':\n        //sendGenMessage(webhookEvent.sender.id, templates['get_isis'])\n        break\n  \n        case 'hackernews':\n        //sendGenMessage(webhookEvent.sender.id, templates['get_hackernews'])\n        break\n  \n        case 'jb':\n        //sendGenMessage(webhookEvent.sender.id, templates['get_jb'])\n        break\n\n        case 'napoveda':\n        case 'nápověda':\n        await sendMultipleMessages(webhookEvent.sender.id, help)\n        break\n\n        default:\n        await sendTextMessage(webhookEvent.sender.id, 'Tenhle příkaz neznám... promiň :-(')\n        await sendGenMessage(webhookEvent.sender.id, templates['send_quick_help'])\n        break\n    }\n}"]}