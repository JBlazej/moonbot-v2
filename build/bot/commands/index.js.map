{"version":3,"sources":["../../../src/bot/commands/index.js"],"names":["event","webhookEvent","incomeMessage","message","text","toLowerCase","trim","formattedMessage","toString","split","sender","id","intro","utcNow","Date","time","date","commands"],"mappings":";;;;;;;;yEAQO,iBAAwBA,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,gDADD,GACgBD,KADhB;AAGCE,iDAHD,GAGiBD,aAAaE,OAAb,CAAqBC,IAArB,CAA0BC,WAA1B,GAAwCC,IAAxC,EAHjB;AAICC,oDAJD,GAIoBL,cAAcM,QAAd,GAAyBC,KAAzB,CAA+B,GAA/B,CAJpB;AAAA,kDAOIF,iBAAiB,CAAjB,CAPJ;AAAA,oEAQM,MARN,uBAYM,MAZN,uBAgBM,UAhBN,wBAiBM,UAjBN,wBAqBM,SArBN,wBAsBM,SAtBN,wBA0BM,MA1BN,wBAiCM,KAjCN,wBAkCM,KAlCN,wBAuCM,OAvCN,wBAwCM,OAxCN,wBA4CM,SA5CN,wBA6CM,SA7CN,wBAiDM,QAjDN,wBAkDM,OAlDN,wBAsDM,OAtDN,wBAuDM,MAvDN,wBA2DM,YA3DN,wBA+DM,IA/DN;AAAA;;AAAA;AASC,mEAAgBN,aAAaS,MAAb,CAAoBC,EAApC,EAAwC,SAAxC;AATD;;AAAA;AAaC,oEAAiBV,aAAaS,MAAb,CAAoBC,EAArC,EAAyCC,iBAAM,CAAN,CAAzC,EAAmDA,iBAAM,CAAN,CAAnD,EAA6DA,iBAAM,CAAN,CAA7D;AAbD;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AA2BKC,0CA3BL,GA2Bc,IAAIC,IAAJ,EA3Bd;AAAA;AAAA,2CA4BkB,0BAAQD,MAAR,CA5BlB;;AAAA;AA4BKE,wCA5BL;AAAA;AAAA,2CA6BkB,0BAAQF,MAAR,CA7BlB;;AAAA;AA6BKG,wCA7BL;;AA8BC,8DAAef,aAAaS,MAAb,CAAoBC,EAAnC,EAAuCV,aAAaE,OAAb,CAAqBC,IAA5D,EAAkEW,IAAlE,EAAwEC,IAAxE;AA9BD;;AAAA;AAmCC,6DAAcf,aAAaS,MAAb,CAAoBC,EAAlC;AACA;AApCD;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;sBAAeM,Q;;;;;AARtB;;AACA;;AAEA;;AACA;;AAEA;;;AAJA","file":"index.js","sourcesContent":["import {sendTextMessage, sendIntroduction} from '../lib/messages'\nimport {getTime, getDate} from '../lib/dateAndTime'\n//import {templates} from '../../views/templates'\nimport {sendIdosAnswer} from '../idos'\nimport {intro} from '../../views/messages'\n\nimport {createNewUser} from '../../models/v1/user'\n\nexport async function commands(event){\n    let webhookEvent = event\n\n    let incomeMessage = webhookEvent.message.text.toLowerCase().trim()\n    let formattedMessage = incomeMessage.toString().split(\" \")\n\n\n    switch(formattedMessage[0]) {\n        case 'ahoj':\n        sendTextMessage(webhookEvent.sender.id, 'Kravina')\n        break\n  \n        case 'moon':\n        sendIntroduction(webhookEvent.sender.id, intro[0], intro[1], intro[2])\n        break\n  \n        case 'napoveda':\n        case 'nápověda':\n        //sendGenMessage(webhookEvent.sender.id, templates['send_quick'])\n        break\n  \n        case 'spojeni':\n        case 'spojení':\n        //sendGenMessage(webhookEvent.sender.id, templates['get_idos'])\n        break\n\n        case 'spoj':\n        let utcNow = new Date()\n        let time = await getTime(utcNow)\n        let date = await getDate(utcNow)\n        sendIdosAnswer(webhookEvent.sender.id, webhookEvent.message.text, time, date)\n        break\n  \n        case 'vse':\n        case 'vše':\n        createNewUser(webhookEvent.sender.id)\n        //sendGenMessage(webhookEvent.sender.id, templates['get_school'])\n        break\n  \n        case 'prvak':\n        case 'prvák':\n        //sendGenMessage(webhookEvent.sender.id, templates['send_manual'])\n        break\n  \n        case 'fakulty':\n        case 'fakulta':\n        //sendGenMessage(webhookEvent.sender.id, templates['get_faculties'])\n        break\n  \n        case 'koleje':\n        case 'kolej':\n        //sendGenMessage(webhookEvent.sender.id, templates['get_dormitories'])\n        break\n  \n        case 'insis':\n        case 'isis':\n        //sendGenMessage(webhookEvent.sender.id, templates['get_isis'])\n        break\n  \n        case 'hackernews':\n        //sendGenMessage(webhookEvent.sender.id, templates['get_hackernews'])\n        break\n  \n        case 'jb':\n        //sendGenMessage(webhookEvent.sender.id, templates['get_jb'])\n        break\n    }\n}"]}