{"version":3,"sources":["../../../src/bot/idos/index.js"],"names":["html","parseHtml","cheerio","load","decodeEntities","normalizeWhitespace","data","attr","first","parsetable","parseTable","result","j","length","i","push","modifyParseHtml","from","to","timeTravel","dateTravel","url","then","console","log","makeIdosRequest","initializeIdosTable","sendIdosAnswer","Promise","resolve","reject","catch","err","sender","text","stops","transformTextForIdos","encodeUrlParameter","initializePromise","async","eachSeries","idosData","callback","Error","pom","splitInformation","extraInformation","split","toString","break","setTimeout","zastavka","prijezd","odjezd","spoj","charAt","toLowerCase","val","isEven","message","message2","value","onlyConnections","replace","encodeURIComponent"],"mappings":"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","file":"index.js","sourcesContent":["import request from 'request-promise'\nimport async from 'async'\nimport cheerio from 'cheerio'\nimport cheerioTableparser from 'cheerio-tableparser'\nimport {sendTextMessage} from '../lib/messages'\n\nasync function parseTable(html){\n  const parseHtml = cheerio.load(html, { decodeEntities: false, normalizeWhitespace: true })\n  cheerioTableparser(parseHtml)\n  \n  const data = parseHtml('table tbody').attr('class', 'results').first().parsetable(true, true, true)\n\n  return data\n}\n\nasync function modifyParseHtml(html){\n  let data = html\n  let result = []\n\n  for ( var j = 0; j < data[2].length; j++ ){\n    const parseTable = []\n\n    for( var i = 2; i < data.length ; i++ ){\n      parseTable.push(data[i][j])\n    }\n\n    result.push(parseTable)\n  }\n\n  return result\n}\n\nasync function makeIdosRequest(from, to, timeTravel, dateTravel){\n  let url = `https://jizdnirady.idnes.cz/praha/spojeni/?f=${from}&t=${to}&time=${timeTravel}&date=${dateTravel}&submit=true`\n  request(url).then((html) => {\n    console.log(html)\n    return html\n  })\n}\nmakeIdosRequest('husinecka', 'volha', '21:30', '23.11.2018')\n\nexport function initializeIdosTable(from, to, timeTravel, dateTravel){\n    let url = `https://jizdnirady.idnes.cz/praha/spojeni/?f=${from}&t=${to}&time=${timeTravel}&date=${dateTravel}&submit=true`\n    let result = []\n  \n    return new Promise( (resolve, reject) => {\n      request(url).then((html) => {\n        const parseHtml = cheerio.load(html, { decodeEntities: false, normalizeWhitespace: true })\n        cheerioTableparser(parseHtml)\n  \n        // Parse data from Idos\n        const data = parseHtml('table tbody').attr('class', 'results').first().parsetable(true, true, true)\n        // 6 columns in 1 row\n\n        for ( var j = 0; j < data[2].length; j++ ){\n          const parseTable = []\n  \n          for( var i = 2; i < data.length ; i++ ){\n            parseTable.push(data[i][j])\n          }\n  \n          result.push(parseTable)\n        }\n        resolve(result)\n        console.log(result)\n      }).catch((err) => reject(err))\n    })\n  }\n\n  //initializeIdosTable('husinecka', 'volha', '10:30', '22.11.2018')\n\n export function sendIdosAnswer(sender, text, timeTravel, dateTravel) {\n   const stops = transformTextForIdos(text)\n   \n   let from = encodeUrlParameter(stops[0])\n   let to = encodeUrlParameter(stops[1])\n   \n   const initializePromise = initializeIdosTable(from, to, timeTravel, dateTravel)\n    initializePromise.then( (result) => {\n        // Initialized table data\n        const data = result\n  \n        let i = 0\n  \n        async.eachSeries(data, function(idosData, callback) {\n  \n          if (i === data.length - 1) {\n          // Break out of async\n          var err = new Error('Broke out of async')\n          const pom = data.length\n          const splitInformation = []\n          splitInformation.push(data[pom-1])\n  \n          let extraInformation = splitInformation[0][0].split(\",\",3).toString()\n          extraInformation += \" Kč\"\n  \n          err.break = true\n  \n          //setTimeout(()=>{sendTextMessage(sender, extraInformation)}, 500)\n          //setTimeout(()=>{sendGenMessage(sender, mTemplate.templates['get_test'])}, 700)\n          return callback(err)\n          }\n  \n          setTimeout(() => {\n            let zastavka = idosData[0]\n            let prijezd = idosData[1]\n            let odjezd  = idosData[2]\n            let spoj = idosData[5]\n  \n  \n            if (odjezd.length === 0 || odjezd.length === 1){ odjezd = 'příjezd'; }\n            if (prijezd.length === 0 || prijezd.length === 1){ prijezd = 'odjezd'; }\n            if (spoj.length === 3){\n  \n               spoj = ', autobusem č. ' + spoj\n  \n  \n             }\n  \n             if (spoj === 'A' || spoj === 'B' || spoj === 'C'){\n               spoj = ', metro ' + spoj\n  \n             }\n  \n             if(spoj.length === 2 || spoj.length === 1){\n               spoj = ', tramvají č. ' + spoj\n  \n  \n             }\n  \n             if(spoj.charAt(0) === 'P'){\n               spoj = ', ' + spoj.toLowerCase()\n             }\n  \n            let val = isEven(i);\n  \n            if (val === false){\n              let message = zastavka + ' ' + odjezd + ' ' + prijezd + spoj \n              sendTextMessage(sender, message)\n              //console.log(message)\n  \n            } else {\n              let message2 = zastavka + ' ' + prijezd + ' ' + odjezd + spoj \n              sendTextMessage(sender, message2)\n              //console.log(message2)\n            }\n  \n  \n            i++\n  \n            callback()\n          }, 800)\n        })\n      }, (err) => {\n        sendTextMessage(sender, \"Něco se pokazilo zkus to znovu :-(\")\n    })\n  }\n  \n  function isEven(value) {\n      if (value%2 == 0)\n          return true;\n      else\n          return false;\n  }\n\n  function transformTextForIdos(text){\n    const onlyConnections = text.replace(\"spoj \", \"\")\n    const stops = onlyConnections.split(\" do \")\n\n    return stops\n  }\n\n\nfunction encodeUrlParameter(value) {\n\treturn encodeURIComponent(value)\n  \t.replace(/\\%20/g, '+')\n}"]}