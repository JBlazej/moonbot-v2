{"version":3,"sources":["../../../src/bot/payloads/index.js"],"names":["id","payload","templates","introIDOS","utcObject","year","vseInfo","payloads"],"mappings":";;;;;;;;uEAYO,iBAAwBA,EAAxB,EAA4BC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCACIA,OADJ;AAAA,wDAEM,iBAFN,uBAQM,YARN,wBAaM,WAbN,wBAiBM,WAjBN,wBAuBM,cAvBN,wBA2BM,iBA3BN,wBA+BM,kBA/BN,wBAoCM,oBApCN,wBAyCM,QAzCN,wBA8CM,QA9CN,wBAmDM,QAnDN,wBAwDM,UAxDN,wBA4DM,UA5DN,wBAgEM,WAhEN,wBAoEM,KApEN,wBAuEM,KAvEN,wBA0EM,KA1EN,wBA6EM,KA7EN,wBAgFM,IAhFN,wBAmFM,IAnFN,wBAsFM,SAtFN,wBAyFM,QAzFN,wBA4FM,QA5FN,wBA+FM,SA/FN,wBAkGM,QAlGN,wBAqGM,SArGN,wBAwGM,MAxGN,wBA2GM,MA3GN,wBA8GM,YA9GN;AAAA;;AAAA;AAAA;AAAA,+BAGO,oCAAqBD,EAArB,EAAyB,iCAAzB,CAHP;;AAAA;AAAA;AAAA,+BAIO,8BAAeA,EAAf,EAAmBE,qBAAU,WAAV,CAAnB,CAJP;;AAAA;AAAA;AAAA,+BAKO,yBAAcF,EAAd,CALP;;AAAA;AAAA;;AAAA;AAAA;AAAA,+BASO,oCAAqBA,EAArB,EAAyBG,kBAAzB,CATP;;AAAA;AAAA;AAAA,+BAUO,8BAAeH,EAAf,EAAmBE,qBAAU,iBAAV,CAAnB,CAVP;;AAAA;AAAA;;AAAA;AAcC,gDAAaF,EAAb;AAdD;;AAAA;AAkBOI,iCAlBP,GAkBmB,qCAlBnB;AAAA;AAAA,+BAmBO,iCAAsBA,UAAUC,IAAhC,EAAsC,CAAtC,CAnBP;;AAAA;AAAA;AAAA,+BAoBO,+BAAgBL,EAAhB,EAAoB,8CAApB,CApBP;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AA4BC,oDAAeA,EAAf;AA5BD;;AAAA;AAgCC,iDAAcA,EAAd,EAAkB,IAAlB;AACA,uDAAgBA,EAAhB,EAAoB,sBAApB;AAjCD;;AAAA;AAqCC,iDAAcA,EAAd,EAAkB,KAAlB;AACA,uDAAgBA,EAAhB,EAAoB,4BAApB;AAtCD;;AAAA;AA0CC,+CAAYA,EAAZ,EAAgB,IAAhB;AACA,uDAAgBA,EAAhB,EAAoB,iBAApB;AA3CD;;AAAA;AA+CC,+CAAYA,EAAZ,EAAgB,IAAhB;AACA,uDAAgBA,EAAhB,EAAoB,iBAApB;AAhDD;;AAAA;AAoDC,+CAAYA,EAAZ,EAAgB,IAAhB;AACA,uDAAgBA,EAAhB,EAAoB,iBAApB;AArDD;;AAAA;AAAA;AAAA,+BAyDO,oCAAqBA,EAArB,EAAyBM,gBAAzB,CAzDP;;AAAA;AAAA;;AAAA;AA6DC,sDAAeN,EAAf,EAAmBE,qBAAU,iBAAV,CAAnB;AA7DD;;AAAA;AAiEC,sDAAeF,EAAf,EAAmBE,qBAAU,eAAV,CAAnB;AAjED;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeK,Q;;;;;AAZtB;;AACA;;AAEA;;AACA;;AACA;;AAEA;;AAEA;;AACA","file":"index.js","sourcesContent":["import {createNewUser, setHackerNews, setLanguage } from '../../services/user'\nimport {incrementLikeInstance} from '../../services/like'\n\nimport {sendTextMessage, sendMultipleMessages, sendGenMessage} from '../lib/messages'\nimport {getStartedPayload, introIDOS, vseInfo} from '../lib/answers'\nimport {templates} from '../lib/templates'\n\nimport {getTimeAndDateNow} from '../lib/dateAndTime'\n\nimport {sendNextIdos} from '../idos'\nimport {sendHackerNews} from '../hacker'\n\nexport async function payloads(id, payload){\n    switch(payload) {\n        case 'started-payload':\n        await sendMultipleMessages(id, getStartedPayload())\n        await sendGenMessage(id, templates['send_info'])\n        await createNewUser(id)\n        break\n\n        case 'idos-intro':\n        await sendMultipleMessages(id, introIDOS)\n        await sendGenMessage(id, templates['send_idos_intro'])\n        break\n\n        case 'idos-next':\n        sendNextIdos(id)\n        break\n\n        case 'idos-like':\n        const utcObject = getTimeAndDateNow()\n        await incrementLikeInstance(utcObject.year, 1)\n        await sendTextMessage(id, 'Děkuju ti za tvé hodnocení a šťastnou cestu.')\n        break\n\n        case 'hacker-intro':\n        //Neco\n        break\n\n        case 'hacker-new-news':\n        sendHackerNews(id)\n        break\n\n        case 'hacker-subscribe':\n        setHackerNews(id, true)\n        sendTextMessage(id, 'Děkuj za tvůj odběr.')\n        break\n\n        case 'hacker-unsubscribe':\n        setHackerNews(id, false)\n        sendTextMessage(id, 'Nevadí tak kdyžtak příště.')\n        break\n\n        case 'set-en':\n        setLanguage(id, 'en')\n        sendTextMessage(id, 'Jazyk nastaven.')\n        break\n\n        case 'set-de':\n        setLanguage(id, 'de')\n        sendTextMessage(id, 'Jazyk nastaven.')\n        break\n\n        case 'set-es':\n        setLanguage(id, 'es')\n        sendTextMessage(id, 'Jazyk nastaven.')\n        break\n\n        case 'vse-info':\n        await sendMultipleMessages(id, vseInfo)\n        break\n\n        case 'colleges':\n        sendGenMessage(id, templates['get_dormitories'])\n        break\n\n        case 'faculties':\n        sendGenMessage(id, templates['get_faculties'])\n        break\n\n        case 'ffu':\n        break\n\n        case 'fmv':\n        break\n\n        case 'fph':\n        break\n\n        case 'fis':\n        break\n\n        case 'nf':\n        break\n\n        case 'fm':\n        break\n\n        case 'blanice':\n        break\n\n        case 'vltava':\n        break\n\n        case 'jarov1':\n        break\n\n        case 'jarov1E':\n        break\n\n        case 'jarov2':\n        break\n\n        case 'jarov3G':\n        break\n\n        case 'roos':\n        break\n\n        case 'svec':\n        break\n\n        case 'sayAboutMe':\n        break\n    }\n}"]}