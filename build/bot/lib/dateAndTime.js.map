{"version":3,"sources":["../../../src/bot/lib/dateAndTime.js"],"names":["getTimeAndDateNow","getTime","getDate","getYear","shiftTimeAndDateUTC","getByHourIdosSettings","utc","newDate","Date","time","date","year","day","getDayOfTheWeek","set","utcTimeAndDate","actualTime","dayOfWeek","shiftedTime","add","formatedTime","format","actualDate","actualYear","shift","actualTimeAndDateUTC","increaseForMinutes","shiftedTimeAndDateUTC","a","hour","formatedHour","incrementTimeMinutes","partOfDay","idosConstant","midnight","morning","afternoon","early_evening","evening"],"mappings":"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","file":"dateAndTime.js","sourcesContent":["import moment from 'moment'\nimport {incrementTimeMinutes} from '../../conf/constant'\n\nexport function getTimeAndDateNow(utc){\n    const newDate = utc ? utc : new Date()\n    \n    const time = getTime(newDate)\n    const date = getDate(newDate)\n    const year = getYear(newDate)\n    const day = getDayOfTheWeek(newDate)\n    const set = getByHourIdosSettings(newDate)\n    \n    return {\n        utc : newDate, \n        time : time,\n        date : date,\n        year : year,\n        set : set,\n        day : day\n    }\n}\n\nfunction getDayOfTheWeek(utcTimeAndDate){\n    const actualTime = moment(utcTimeAndDate)\n    const dayOfWeek = actualTime.day()\n\n    return dayOfWeek\n}\n\nexport function getTime(utcTimeAndDate){\n    const actualTime = moment(utcTimeAndDate)\n    const shiftedTime = actualTime.add(1, 'hours')\n    const formatedTime = shiftedTime.format('HH:mm')\n    \n    return formatedTime\n}\n\nexport function getDate(utcTimeAndDate){\n    const actualDate = moment(utcTimeAndDate).format('D.M.YYYY')\n    \n    return actualDate\n}\n\nexport function getYear(utcTimeAndDate){\n    const actualYear = moment(utcTimeAndDate).format('YYYY')\n    \n    return actualYear\n}\n\nexport function shiftTimeAndDateUTC(utcTimeAndDate, shift){\n    const actualTimeAndDateUTC = moment(utcTimeAndDate)\n    const increaseForMinutes = shift\n   \n    const shiftedTimeAndDateUTC = actualTimeAndDateUTC.add(increaseForMinutes, 'minutes')\n\n    return shiftedTimeAndDateUTC\n}\n\nexport function getByHourIdosSettings(utcTimeAndDate, a){\n    const actualTime = moment(utcTimeAndDate)\n    const hour = actualTime.add(1, 'hours')\n    const formatedHour = hour.format('H')\n    const set = incrementTimeMinutes\n    \n    if (formatedHour === 0) {\n        return {\n            partOfDay: 'půlnoc',\n            idosConstant: a ? a + set.midnight : set.midnight\n        }\n\n    }\n\n    if (1 <= formatedHour && formatedHour < 9) {\n        return {\n            partOfDay: 'ráno',\n            idosConstant: a ? a + set.morning : set.morning\n        }\n\n    }\n\n    if (9 <= formatedHour && formatedHour < 12) {\n        return {\n            partOfDay: 'dopoledne',\n            idosConstant: a ? a + set.morning : set.morning\n        }\n    }\n\n    if (12 <= formatedHour && formatedHour < 17) {\n        return {\n            partOfDay: 'odpoledne',\n            idosConstant: a ? a + set.afternoon : set.afternoon\n        }\n    }\n\n    if (17 <= formatedHour && formatedHour < 20 ) {\n        return {\n            partOfDay: 'podvečer',\n            idosConstant: a ? a + set.early_evening : set.early_evening\n        }\n    }\n\n    if (20 <= formatedHour && formatedHour < 24) {\n        return {\n            partOfDay: 'večer',\n            idosConstant: a ? a + set.evening : set.evening\n        }\n    }\n}\n"]}