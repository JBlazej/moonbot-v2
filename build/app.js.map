{"version":3,"sources":["../src/app.js"],"names":["app","use","express","static","__dirname","bodyParser","json","urlencoded","extended","path","join","router","set","process","env","PORT","listen","get","console","log","shuttingDown","req","res","next","setHeader","err","Error","status","send","message","logger","error"],"mappings":";;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AAEA;;;AAGA,IAAMA,MAAM,wBAAZ;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACAA,IAAIC,GAAJ,CAAQ,kCAAR;AACA;AACAD,IAAIC,GAAJ,CAAQ,SAAR,EAAmBC,kBAAQC,MAAR,CAAeC,YAAY,YAA3B,CAAnB;AACA;AACAJ,IAAIC,GAAJ,CAAQI,qBAAWC,IAAX,EAAR;AACAN,IAAIC,GAAJ,CAAQI,qBAAWE,UAAX,CAAsB,EAAEC,UAAU,IAAZ,EAAtB,CAAR;AACA;AACAR,IAAIC,GAAJ,CAAQ,6BAAR;AACA;AACAD,IAAIC,GAAJ,CAAQ,4BAAaQ,eAAKC,IAAL,CAAUN,SAAV,EAAqB,WAArB,EAAkC,aAAlC,CAAb,CAAR;AACA;AACAJ,IAAIC,GAAJ,CAAQU,gBAAR;AACA;AACAX,IAAIY,GAAJ,CAAQ,MAAR,EAAiBC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAArC;;AAEA;;;AAGAf,IAAIgB,MAAJ,CAAWhB,IAAIiB,GAAJ,CAAQ,MAAR,CAAX,EAA4B,YAAM;AAC9BC,UAAQC,GAAR,CACE,oDADF,EAEEnB,IAAIiB,GAAJ,CAAQ,MAAR,CAFF,EAGEjB,IAAIiB,GAAJ,CAAQ,KAAR,CAHF;AAKAC,UAAQC,GAAR,CAAY,yBAAZ;AACH,CAPD;;AASA;AACA,IAAIC,eAAe,KAAnB;;AAEApB,IAAIC,GAAJ,CAAQ,UAACoB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxB,MAAI,CAACH,YAAL,EAAmB,OAAOG,MAAP;;AAEnBD,MAAIE,SAAJ,CAAc,YAAd,EAA4B,OAA5B;AACA,MAAMC,MAAM,IAAIC,KAAJ,CAAU,wCAAV,CAAZ;AACAD,MAAIE,MAAJ,GAAa,GAAb;AACAJ,OAAKE,GAAL;AACH,CAPD;;AASAzB,IAAIC,GAAJ,CAAQ,UAACoB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxB,MAAME,MAAM,IAAIC,KAAJ,CAAU,WAAV,CAAZ;AACAD,MAAIE,MAAJ,GAAa,GAAb;AACAJ,OAAKE,GAAL;AACH,CAJD;;AAMAzB,IAAIC,GAAJ,CAAQ,UAACwB,GAAD,EAAMJ,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAyB;AAC7BD,MAAIK,MAAJ,CAAWF,IAAIE,MAAJ,IAAc,GAAzB;AACAT,UAAQC,GAAR,CAAYM,GAAZ;AACAH,MAAIM,IAAJ,CAAS,EAAC,SAASH,IAAII,OAAd,EAAT;AACA,MAAI7B,IAAIiB,GAAJ,CAAQ,KAAR,MAAmB,aAAvB,EAAsC;AACpCa,WAAOC,KAAP,CAAaN,GAAb;AACD;AACJ,CAPD;;kBASezB,G","file":"app.js","sourcesContent":["import 'babel-polyfill'\nimport express from 'express'\nimport bodyParser from 'body-parser'\nimport serveFavicon from 'serve-favicon'\nimport sslRedirect from 'heroku-ssl-redirect'\nimport cookieParser from 'cookie-parser'\nimport path from 'path'\nimport router from './router'\nimport {connectDB} from './models'\nimport {sigterm} from './services/sigterm'\n\n/**\n * Start Express server.\n */\nconst app = express()\n\n/**\n * Setup Express server.\n */\n// DB\nconnectDB()\n// HEROKU SIGTERM\nsigterm()\n// SSL\napp.use(sslRedirect())\n// PUBLIC\napp.use('/public', express.static(__dirname + '../public/'))\n// BODY\napp.use(bodyParser.json())\napp.use(bodyParser.urlencoded({ extended: true }))\n// COOKIE\napp.use(cookieParser())\n// FAV\napp.use(serveFavicon(path.join(__dirname, '../public', 'favicon.ico')))\n// ROUTER\napp.use(router)\n// PORT\napp.set('port', (process.env.PORT || 3000))\n\n/**\n * Run Express server.\n */\napp.listen(app.get(\"port\"), () => {\n    console.log(\n      \"  App is running at http://localhost:%d in %s mode\",\n      app.get(\"port\"),\n      app.get(\"env\")\n    )\n    console.log(\"  Press CMD-C to stop\\n\");\n})\n\n// HANDLINGS ERRORS\nlet shuttingDown = false\n\napp.use((req, res, next) => {\n    if (!shuttingDown) return next()\n  \n    res.setHeader('Connection', 'close')\n    const err = new Error('Server is in the process of restarting')\n    err.status = 503\n    next(err)\n})\n\napp.use((req, res, next) => {\n    const err = new Error('Not Found')\n    err.status = 404\n    next(err)\n})\n  \napp.use((err, req, res, next) => {\n    res.status(err.status || 500)\n    console.log(err)\n    res.send({'error': err.message})\n    if (app.get('env') === 'development') {\n      logger.error(err)\n    }\n})\n\nexport default app"]}