{"version":3,"sources":["../../../src/models/v1/user.js"],"names":["model","UserSchema","find","user","console","log","getUserAll","id","User","save","createNewUser","mongoose","Schema","type","String","unique","lowercase","required","created","Date","default","now","station","from","to","time","hacker","Boolean"],"mappings":";;;;;;;;uEAoCO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACgB,eAAQA,KAAR,CAAc,MAAd,EAAsBC,UAAtB,EAAkCC,IAAlC,CAAuC,EAAvC,CADhB;;AAAA;AACGC,4BADH;;AAEHC,gCAAQC,GAAR,CAAYF,IAAZ;;AAFG,yDAIIA,IAJJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeG,U;;;;;;wEASf,kBAA8BC,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACgB,eAAQP,KAAR,CAAc,MAAd,EAAsBC,UAAtB,CADhB;;AAAA;AACGO,4BADH;;AAEHJ,gCAAQC,GAAR,CAAYG,IAAZ;AACML,4BAHH,GAGU,IAAIK,IAAJ,CAAS,EAACD,IAAIA,EAAL,EAAT,CAHV;;AAIHJ,6BAAKM,IAAL;AACAL,gCAAQC,GAAR,CAAYF,IAAZ;AALG,0DAMIA,IANJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeO,a;;;;;AA7CtB;;;;AACA;;;;;;AAEA;AACA;AACA,IAAMT,aAAa,IAAIU,mBAASC,MAAb,CAAoB;AACrCL,QAAI;AACFM,cAAMC,MADJ;AAEFC,gBAAQ,IAFN;AAGFC,mBAAW,IAHT;AAIFC,kBAAU;AAJR,KADiC;AAOrCC,aAAS;AACPL,cAAMM,IADC;AAEPC,iBAASD,KAAKE;AAFP,KAP4B;AAWrCC,aAAS;AACLC,cAAM;AACFV,kBAAMC,MADJ;AAEFM,qBAAS;AAFP,SADD;AAKLI,YAAI;AACAX,kBAAMC,MADN;AAEAM,qBAAS;AAFT,SALC;AASLK,cAAM;AACFZ,kBAAMM,IADJ;AAEFC,qBAASD,KAAKE;AAFZ;AATD,KAX4B;AAyBrCK,YAAQ;AACJb,cAAMc,OADF;AAEJP,iBAAS;AAFL;AAzB6B,CAApB,CAAnB","file":"user.js","sourcesContent":["import mongoose from 'mongoose'\nimport {getDB} from '..'\n\n// USERS SCHEMA\n// -----------------------------------------------------------------------------\nconst UserSchema = new mongoose.Schema({\n  id: {\n    type: String,\n    unique: true,\n    lowercase: true,\n    required: true\n  },\n  created: {\n    type: Date,\n    default: Date.now\n  },\n  station: {\n      from: {\n          type: String,\n          default: 'volha'\n      },\n      to: {\n          type: String,\n          default: 'husinecka'\n      },\n      time: {\n          type: Date,\n          default: Date.now\n      }\n  },\n  hacker: {\n      type: Boolean,\n      default: false\n  }\n})\n\nexport async function getUserAll () {\n    const user = await getDB().model('User', UserSchema).find({})\n    console.log(user)\n    \n    return user\n}\n\n\n\nexport async function createNewUser (id) {\n    const User = await getDB().model('User', UserSchema)\n    console.log(User)\n    const user = new User({id: id})\n    user.save()\n    console.log(user)\n    return user\n  \n}"]}