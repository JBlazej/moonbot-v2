{"version":3,"sources":["../../src/controllers/facebook.js"],"names":["req","res","VERIFY_TOKEN","mode","query","token","challenge","status","send","sendStatus","facebookVerificationHook","body","entry","messaging","message","console","log","object","forEach","event","webhook_event","sender","id","text","postback","facebookEventHook"],"mappings":";;;;;;;;uEAEO,iBAAyCA,GAAzC,EAA8CC,GAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AACJ;AACIC,oCAFA,GAEe,kBAFf;;AAIJ;;AACIC,4BALA,GAKOH,IAAII,KAAJ,CAAU,UAAV,CALP;AAMAC,6BANA,GAMQL,IAAII,KAAJ,CAAU,kBAAV,CANR;AAOAE,iCAPA,GAOYN,IAAII,KAAJ,CAAU,eAAV,CAPZ;;AASJ;;AACA,4BAAID,QAAQE,KAAZ,EAAmB;AACjB,gCAAIF,SAAS,WAAT,IAAwBE,UAAUH,YAAtC,EAAoD;;AAElDD,oCAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,SAArB;AACD,6BAHD,MAGO;AACLL,oCAAIQ,UAAJ,CAAe,GAAf;AACD;AACF;;AAjBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAgBC,wB;;;;;;wEAoBhB,kBAAiCV,GAAjC,EAAsCC,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AACCU,4BADD,GACQX,IAAIW,IADZ;;AAAA,8BAGC,CAACX,IAAIW,IAAL,IAAa,CAACX,IAAIW,IAAJ,CAASC,KAAT,CAAe,CAAf,CAAd,IAAmC,CAACZ,IAAIW,IAAJ,CAASC,KAAT,CAAe,CAAf,EAAkBC,SAAlB,CAA4B,CAA5B,EAA+BC,OAHpE;AAAA;AAAA;AAAA;;AAAA,0DAIQC,QAAQC,GAAR,CAAY,qBAAZ,CAJR;;AAAA;;AAOH,4BAAIL,KAAKM,MAAL,KAAgB,MAApB,EAA4B;AACxB;AACAN,iCAAKC,KAAL,CAAWM,OAAX,CAAmB,UAASN,KAAT,EAAgB;AAC/BA,sCAAMC,SAAN,CAAgBK,OAAhB,CAAwB,UAAUC,KAAV,EAAiB;AACrC;AACA,wCAAIC,gBAAgBD,KAApB;;AAEAJ,4CAAQC,GAAR,CAAYI,aAAZ;AACAL,4CAAQC,GAAR,CAAYI,cAAcC,MAAd,CAAqBC,EAAjC;AACAP,4CAAQC,GAAR,CAAYI,cAAcN,OAA1B;AACAC,4CAAQC,GAAR,CAAYI,cAAcN,OAAd,CAAsBS,IAAlC;AACAR,4CAAQC,GAAR,CAAYI,cAAcI,QAA1B;AACA,6EAAqBJ,cAAcC,MAAd,CAAqBC,EAA1C,EAA8CF,cAAcN,OAAd,CAAsBS,IAApE;AAEH,iCAXD;AAYAtB,oCAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,gBAArB;AACH,6BAdD;AAeH,yBAjBD,MAiBO;AACHP,gCAAIQ,UAAJ,CAAe,GAAf;AACH;;AA1BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAegB,iB;;;;;AAtBtB","file":"facebook.js","sourcesContent":["import {transformTextMessage} from '../bot/transformator'\n\nexport async function  facebookVerificationHook(req, res) {\n   // Your verify token. Should be a random string.\n   let VERIFY_TOKEN = \"TriPrsaNaHrudi89\"\n     \n   // Parse the query params\n   let mode = req.query['hub.mode']\n   let token = req.query['hub.verify_token']\n   let challenge = req.query['hub.challenge']\n     \n   // Checks if a token and mode is in the query string of the request\n   if (mode && token) {\n     if (mode === 'subscribe' && token === VERIFY_TOKEN) {\n         \n       res.status(200).send(challenge)\n     } else {\n       res.sendStatus(403);    \n     }\n   }\n}\n\nexport async function facebookEventHook(req, res){\n    let body = req.body\n\n    if (!req.body || !req.body.entry[0] || !req.body.entry[0].messaging[0].message) {\n        return console.log('No request received')\n    }\n\n    if (body.object === 'page') {\n        // Iterates over each entry - there may be multiple if batched\n        body.entry.forEach(function(entry) {\n            entry.messaging.forEach(function (event) {\n                //let webhook_event = entry.messaging[0]\n                let webhook_event = event\n\n                console.log(webhook_event)\n                console.log(webhook_event.sender.id)\n                console.log(webhook_event.message)\n                console.log(webhook_event.message.text)\n                console.log(webhook_event.postback)\n                transformTextMessage(webhook_event.sender.id, webhook_event.message.text)\n            \n            })\n            res.status(200).send('EVENT_RECEIVED')\n        })\n    } else {\n        res.sendStatus(404)\n    }\n}\n"]}